{"version":3,"sources":["logo.svg","components/A.js","components/LifeCycle.js","App.js","reportWebVitals.js","index.js"],"names":["A","React","memo","useState","x","setUpdate","useEffect","console","log","y","setChange","onClick","LifeCycle","props","count","state","counter","this","setState","plus","bind","nextProps","nextState","PureComponent","App","flag","setFlag","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,YCEDA,EAAEC,IAAMC,MAAK,WACvB,MAAuBC,mBAAS,GAAhC,mBAAOC,EAAP,KAAUC,EAAV,KACAC,qBAAU,WACNC,QAAQC,IAAI,mBACd,IACFF,qBAAU,WACNC,QAAQC,IAAI,kBACd,CAACJ,IAEHE,qBAAU,WACNC,QAAQC,IAAI,6BAGhBF,qBAAU,WACP,OAAO,WACHC,QAAQC,IAAI,mBAEhB,IAEH,MAAuBL,mBAAS,GAAhC,mBAAOM,EAAP,KAAUC,EAAV,KASA,OACI,gCACI,wBAAQC,QAVC,WACbN,EAAUD,EAAE,IASR,sBACA,wBAAQO,QAPA,WACZD,EAAUD,EAAE,KAMR,wBACA,yDAA4BL,EAA5B,QAAoCK,W,4BChCnCG,EAAb,kDAEI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,EACb,EAAKC,MAAO,CAACC,QAAQ,EAAKF,OAC1BP,QAAQC,IAAI,uBAJE,EAFtB,wCAeI,WACIS,KAAKH,QACLG,KAAKC,SAAS,CAACF,QAAQC,KAAKH,UAjBpC,oBAmBI,WAEI,OADAP,QAAQC,IAAI,kBACJ,qCACR,kDAAqBS,KAAKF,MAAMC,WAChC,wBAAQL,QAASM,KAAKE,KAAKC,KAAKH,MAAhC,4BAvBR,+BA0BI,WACIV,QAAQC,IAAI,uBA3BpB,kCA+BI,WACID,QAAQC,IAAI,wDAhCpB,8CAkCI,WACID,QAAQC,IAAI,+BAnCpB,iCAsCI,WACID,QAAQC,IAAI,kBAvCpB,uCAQI,SAAgCa,EAAWC,GACvCf,QAAQC,IAAI,gEATpB,GAA+BP,IAAMsB,eCqBtBC,MAhBf,WACE,MAAwBrB,oBAAS,GAAjC,mBAAOsB,EAAP,KAAaC,EAAb,KAIA,OAEE,cADA,CACA,sBACCD,EAAK,cAACzB,EAAD,IAAK,cAAC,EAAD,IACX,wBAAQW,QAPO,WACfe,GAASD,IAMT,2BCJWE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64c15820.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useEffect, useState} from 'react'\n\nexport const  A=React.memo(()=> {\n    const [x, setUpdate] = useState(0);\n    useEffect(()=>{\n        console.log(\"DidMount Call\");\n    },[]);\n    useEffect(()=>{\n        console.log(\"X Watch Call\");\n    },[x]);\n\n    useEffect(()=>{\n        console.log(\"All Update (DidUpdate)\");\n    });\n\n    useEffect(() => {\n       return ()=>{\n           console.log('Will UnMount');\n       }\n    }, [])\n   \n    const [y, setChange] = useState(0);\n    const updateIt = ()=>{\n        setUpdate(x+1);\n        \n    }\n    const update2 = ()=>{\n        setChange(y+10);\n        \n    }\n    return (\n        <div>\n            <button onClick={updateIt}>Click Me</button>\n            <button onClick={update2}>Click Me 2</button>\n            <h1> Functional Life Cycle {x} and {y}</h1>\n        </div>\n    )\n}\n);","import React from 'react';\n\nexport class LifeCycle extends React.PureComponent{\n//React.Component{\n    constructor(props){\n        super(props);\n        this.count = 0;\n        this.state ={counter:this.count};\n        console.log('1. Constructor call');\n    }\n    static getDerivedStateFromProps(nextProps, nextState){\n        console.log('getDerivedStateFromProps (Will Mount) + (Will Rec Props)');\n        \n    }\n    /*componentWillMount(){\n        console.log('2. Component will mount call');\n    }*/\n    plus(){\n        this.count++;\n        this.setState({counter:this.count});\n    }\n    render(){\n        console.log('3. Render Call');\n        return (<>\n        <h1>Life Cycle Demo {this.state.counter}</h1>\n        <button onClick={this.plus.bind(this)}>Change It</button>\n        </>);\n    }\n    componentDidMount(){\n        console.log('4. Did Mount Call');\n        \n    }\n\n    componentWillUnmount(){\n        console.log('Last Component will unmount when it is unmounting.');\n    }\n    UNSAFE_componentWillReceiveProps(){\n        console.log('Props Recieve from parent');\n    }\n\n    componentWillUpdate(){\n        console.log('Will UPdate');\n    }\n\n    // shouldComponentUpdate(nextProps, nextState){\n    //     console.log('Updation Happens ',this.state, '' , nextState);\n    //     if( this.state !=nextState)\n    //     return true;\n    //     else\n    //     return false;\n    //     //return true;\n    // }\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport { A } from './components/A';\nimport React, {useState} from 'react'\nimport { LifeCycle } from './components/LifeCycle';\n\nfunction App() {\n  const [flag, setFlag] = useState(true);\n  const showHide = ()=>{\n    setFlag(!flag);\n  }\n  return (\n    //  <LifeCycle x = \"10\"/>\n    <>\n    {flag?<A/>:<LifeCycle/>}\n    <button onClick={showHide}>Show/Hide</button>\n  \n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}